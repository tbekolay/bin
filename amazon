#!/usr/bin/env python
"""Make a query to the Amazon product API.

Usage: amazon QUERY

"""

__version__ = '0.1.0'

if __name__ != '__main__':
    raise ImportError("Don't import me, bro!")

import sys
from common import activate_venv

activate_venv('amazon')

import amazonproduct
import click
from lxml import etree


@click.group()
@click.option('--locale', type=str, default='ca')
@click.pass_context
def cli(ctx, locale):
    ctx.obj = amazonproduct.API(locale=locale)


@cli.command()
@click.argument('queries', type=click.File('rb'), default='-')
@click.pass_obj
def lookup(api, queries):
    """Look up the ASIN of an item or items."""
    for query in queries:
        query = query.rstrip('\n')
        # Temp hack
        if query.startswith('*'):
            click.echo(query)
            continue
        try:
            items = api.item_search('All', Keywords=query)
        except amazonproduct.errors.NoExactMatchesFound:
            click.echo("Item not found")
            continue

        if items.results == 1:
            asin = next(iter(items)).ASIN
        else:
            asins = []
            prompt = []
            for i, item in enumerate(items):
                prompt.append("%3d. %s\n     %s" % (
                    i+1, item.ItemAttributes.Title, item.DetailPageURL))
                asins.append(item.ASIN)
            prompt.append("%d matches found for '%s'. Please select one"
                          % (i+1, query))
            choice = -1
            while choice < 1 or choice > i + 1:
                choice = click.prompt("\n".join(prompt), type=int)
            asin = asins[choice - 1]
        click.echo(asin)


# etree.tostring(item, pretty_print=True)

@cli.command()
@click.argument('asins', type=click.File('rb'), default='-')
@click.pass_obj
def prices(api, asins):
    """Look up the current offers of an item or items."""
    for asin in asins:
        asin = asin.rstrip('\n')
        if not asin.startswith('B'):
            click.echo(asin)
            continue
        item = api.item_lookup(asin,
                               Condition="All",
                               ResponseGroup="Offers,ShippingCharges")

        item = item.Items.Item
        offers = []
        for offer in item.Offers.iterchildren():
            if not offer.tag.endswith("Offer"):
                continue
            ship = offer.OfferListing.IsEligibleForSuperSaverShipping == '0'
            offers.append((float(offer.OfferListing.Price.Amount) / 100.0
                           + (0.0 if ship else 5.0),
                           offer.OfferAttributes.Condition))
        if len(offers) == 0:
            click.echo("%s: No offers %s" % (asin, item.Offers.MoreOffersUrl))
        else:
            lowest = sorted(offers)[0]
            click.echo("%s: %.2f (%s) %s" % (
                asin, lowest[0], lowest[1], item.Offers.MoreOffersUrl))


cli()
